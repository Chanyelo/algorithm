package 抽屉原理;



        import java.util.Scanner;

public class ny417 {

    /**
     * @param args
     * 有一天，王小子在遨游世界时，遇到了一场自然灾害。
     * 一个人孤独的在一个岛上，没有吃的没有喝的。在他饥寒交迫将要死亡时，
     * 死神来了。由于这个死神在成神之前是一个数学家，所以他有一个习惯，
     * 会和即死之人玩一个数学游戏，来决定是否将其灵魂带走。
     * 游戏规则是死神给王小子两个整数n（100<=n<=1000000）,m(2<=m<=n)，
     * 在1~n个数中，随机取m个数,问在这m个数中是否一定存在一个数是另一个数的倍数，
     * 是则回答“YES",否则”NO"。如果王小子回答正确，将有再活下去的机会。
     * 但是他很后悔以前没有好好学习数学，王小子知道你数学学得不错，请你救他一命。
     *
     * 本题应用的是鸽笼原理，也叫抽屉原理。

    桌上有十个苹果，要把这十个苹果放到九个抽屉里，无论怎样放，
    我们会发现至少会有一个抽屉里面放两个苹果。这一现象就是我们所说的“抽屉原理”。
    抽屉原理的一般含义为：“如果每个抽屉代表一个集合，每一个苹果就可以代表一个元素，
    假如有n+1或多于n+1个元素放到n个集合中去，其中必定至少有一个集合里有两个元素。”
    抽屉原理有时也被称为鸽巢原理（“如果有五个鸽子笼，养鸽人养了6只鸽子，
    那么当鸽子飞回笼中后，至少有一个笼子中装有2只鸽子”）。它是组合数学中一个重要的原理。
     *
     */
    public static void main(String[] args) {
        // TODO Auto-generated method stub
        Scanner scan=new Scanner(System.in);
        int n,m;
        while(scan.hasNext()){
            System.out.println(123);
            n=scan.nextInt();
            m=scan.nextInt();
            n=n/2+(1&n);
            System.out.printf("%s\n",m>n?"YES":"NO");
        }
    }

}
